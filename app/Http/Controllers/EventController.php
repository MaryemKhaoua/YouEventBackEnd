<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Event;
use App\Http\Requests\EventRequest;
use Illuminate\Support\Facades\Auth;

class EventController extends Controller
{
    /**
     * üìå Afficher tous les √©v√©nements (accessible √† tous, m√™me sans connexion)
     */
    public function index()
    {
        $events = Event::all();
        return response()->json($events);
    }

    /**
     * üìå Cr√©er un √©v√©nement (Seulement organisateur et admin)
     */
    public function store(EventRequest $request)
    {
        dd($request->validated());

        $user = Auth::user();

        if (!$user || (!$user->hasRole('organizer') && !$user->hasRole('admin'))) {
            return response()->json(['error' => 'Acc√®s refus√©.'], 403);
        }

        $event = Event::create(array_merge($request->validated(), ['created_by' => $user->id]));

        return response()->json(['message' => '√âv√©nement cr√©√© avec succ√®s', 'event' => $event], 201);
    }

    /**
     * üìå Afficher un seul √©v√©nement (accessible √† tous)
     */
    public function show(string $id)
    {
        $event = Event::find($id);

        if (!$event) {
            return response()->json(['error' => '√âv√©nement non trouv√©.'], 404);
        }

        return response()->json($event);
    }

    /**
     * üìå Mettre √† jour un √©v√©nement (Organisateur et Admin uniquement)
     */
    public function update(EventRequest $request, string $id)
    {
        $event = Event::find($id);
        $user = Auth::user();

        if (!$event) {
            return response()->json(['error' => '√âv√©nement non trouv√©.'], 404);
        }

        if (!$user || (!$user->hasRole('admin') && $event->created_by !== $user->id)) {
            return response()->json(['error' => 'Vous n\'avez pas la permission de modifier cet √©v√©nement.'], 403);
        }

        $event->update($request->validated());

        return response()->json(['message' => '√âv√©nement mis √† jour avec succ√®s', 'event' => $event]);
    }

    /**
     * üìå Supprimer un √©v√©nement 
     * - Admin peut supprimer tous les √©v√©nements.
     * - Organisateur peut supprimer seulement ses propres √©v√©nements.
     */
    public function destroy(string $id)
    {
        $event = Event::find($id);
        $user = Auth::user();

        if (!$event) {
            return response()->json(['error' => '√âv√©nement non trouv√©.'], 404);
        }

        if (!$user || (!$user->hasRole('admin') && $event->created_by !== $user->id)) {
            return response()->json(['error' => 'Vous n\'avez pas la permission de supprimer cet √©v√©nement.'], 403);
        }

        $event->delete();

        return response()->json(['message' => '√âv√©nement supprim√© avec succ√®s']);
    }
}
